{"version":3,"sources":["components/sidebar/Sidebar-list-element.jsx","components/sidebar/sidebarStyles.js","components/sidebar/Sidebar.jsx","components/addNew-popup/addNew-popup.styles.js","components/addNew-popup/addNewPopup.js","components/settingsPopup/settingsPopus.styles.js","components/settingsPopup/settingsPopup.js","components/speech.helper.js","components/Timer/Timer.jsx","components/Clock/Clock.component.jsx","exerciseList.js","App.js","serviceWorker.js","index.js"],"names":["SidebarListElement","props","handleRemove","commonProps","removeExercise","item","handleEdit","setState","isEditing","handleChange","e","editedExercise","target","value","handleSubmit","preventDefault","editExercise","id","name","state","this","itemSelected","dragHandleProps","scale","shadow","dragged","onSubmit","className","type","onChange","autoFocus","style","transform","boxShadow","fontSize","onClick","React","Component","makeStyles","list","width","color","padding","btn","textTransform","letterSpacing","transition","backgroundColor","sidebarHeader","display","alignItems","paddingTop","sidebarChevron","alignContent","marginTop","borderRadius","marginLeft","sidebarTitle","cursor","margin","sidebarSubitle","fontWeight","sidebarSettings","sidebarSettingsRight","settingsContainer","justifyContent","settingsText","paddingLeft","paddingBottom","sidebarAddNew","marginBottom","height","sidebarReset","opacity","SwipeableTemporaryDrawer","exerciseList","onListChange","addNew","openSettingsWindow","reset","resetAll","len","length","classes","useStyles","useState","toggleDrawer","open","event","key","Button","SwipeableDrawer","onClose","onOpen","role","settingsIcon","Divider","List","itemKey","template","onMoveEnd","newList","constrainDrag","errorSuppresion","minWidth","borderBottom","FormDialog","newExercise","setNewExercise","handleClose","closePopup","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","label","fullWidth","DialogActions","addNewExercise","disabled","inputHolder","formInput","workoutInterval","intervals","w","restInterval","r","newWorkoutInterval","setWorkoutInterval","newRestInterval","setRestInterval","Number","InputProps","inputProps","min","max","defaultValue","onKeyDown","updateIntervals","textToSpeech","text","desiredVoice","available_voices","window","speechSynthesis","getVoices","english_voice1","english_voice2","ind","i","lang","utter","SpeechSynthesisUtterance","rate","pitch","voice","speak","Timer","runTime","alternate","isResting","precount","setPrecount","nextExercise","currentExercise","isRunning","setIsRunning","seconds","setSeconds","timeRemaining","goPrecount","useCallback","timeZero","timer","stop","useEffect","resetWorkout","setInterval","clearInterval","timerButtons","isWorkingOut","background","isNaN","Watch","setIsResting","index","setIndex","setReset","time","exerciseIndexMsg","currentExerciseMsg","setTimeout","uuid","App","localStorage","setItem","JSON","stringify","openAddNew","isAddNewDialogOpen","isIntervalDialogOpen","closeAddNewPopup","closeSettingsWindow","updatedList","exerciseToRemove","filter","exercise","updatedExercise","map","newTimes","parse","getItem","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d6e4c9a.chunk.js","sourcesContent":["import React from 'react';\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nimport \"./Sidebar-list-element.scss\"\n    \nclass SidebarListElement extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isEditing: false,\n      editedExercise: this.props.item.name,\n    }\n  }\n\n  handleRemove = () => {\n    this.props.commonProps.removeExercise(this.props.item)\n  }\n\n  handleEdit = () => {\n    this.setState({isEditing: true})\n  }\n\n  handleChange = (e) => {\n    this.setState({editedExercise: e.target.value})\n  }\n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.commonProps.editExercise({id: this.props.item.id, name: this.state.editedExercise})\n    this.setState({isEditing: false})\n  }\n\n  render() {\n      const {item, itemSelected, dragHandleProps} = this.props;\n      const { isEditing, editedExercise } = this.state;\n      const { handleChange, handleSubmit, handleEdit, handleRemove} = this;\n      const scale = (itemSelected * 0.05) + 1;\n      const shadow = itemSelected * 15 + 1;\n      const dragged = itemSelected !== 0;\n      \n      return (\n        isEditing ? \n          <form onSubmit={handleSubmit} className=\"list-element-form\">\n            <input \n              type=\"text\"\n              className=\"list-element-input\" \n              value={editedExercise} \n              onChange={handleChange}\n              autoFocus\n            >\n            </input>\n            <button className=\"list-element-update-btn\"> <CheckCircleIcon /> </button>\n          </form>\n        : \n          <div\n            className={dragged ? \"itemDragged\" : \"item\"}\n            style={{\n              transform: `scale(${scale})`,\n              boxShadow: `rgba(0, 0, 0, 0.2) 0px ${shadow}px ${2 * shadow}px 0px`\n            }}\n          >\n\n            <div className=\"dragHandle\" {...dragHandleProps}> \n              <DragIndicatorIcon fontSize=\"small\"/> \n            </div>\n\n            <div className=\"list-element-title\">{ item.name }</div>\n            <div className=\"list-element-icon-container\">\n              <div className=\"list-element-icon\" onClick={handleEdit}> \n                <EditIcon fontSize=\"small\"/>\n              </div>\n              <div className=\"list-element-icon\" onClick={handleRemove}>\n                <DeleteIcon fontSize=\"small\"/>\n              </div>\n            </div>\n          </div>\n    );\n  }\n}\n\nexport default SidebarListElement;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n    list: {\n        width: 360,\n        color: 'white',\n        padding: '0 30px'\n    },\n    btn: {\n        padding: '10px 20px',\n        textTransform: 'uppercase',\n        fontSize: '.7rem',\n        letterSpacing: '.1rem',\n        color: 'var(--highlight-dim)',\n        transition: 'all .4s ease-in-out',\n\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 0, 0)',\n            color: 'var(--highlight-color)',\n            letterSpacing: '.15rem'\n        }\n    },\n    sidebarHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingTop: '15px'\n    },\n    sidebarChevron: {\n        display: 'flex',\n        alignContent: 'center',\n        marginTop: '3px',\n        borderRadius: '20px',\n        backgroundColor: 'rgba(255, 255, 255, 0.10)',\n        marginLeft: 'auto',\n        transition: 'all .6s',\n\n        '&:hover': {\n            backgroundColor: 'rgba(255, 255, 255, 0.25)',\n            transform: 'scale(1.2)'\n        }\n    },\n    sidebarTitle: {\n        cursor: 'default',\n        margin: 0\n    },\n    sidebarSubitle: {\n        textTransform: 'uppercase',\n        fontWeight: 500,\n        marginTop: '0px',\n        padding: '0px 0px 10px 0px',\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: '.7rem',\n        letterSpacing: '.1rem',\n        cursor: 'default'\n    },\n\n    sidebarSettings: {\n        width: '45%',\n        textTransform: 'uppercase',\n        fontSize: '.7rem',\n        letterSpacing: '.1rem',\n        display: 'flex',\n        alignItems: 'center',\n        padding: '5px 0 5px 0',\n        borderRadius: 1,\n        color: 'rgba(255, 255, 255, 0.5)',\n        transition: 'all .3s',\n\n        '&:hover': {\n            color: 'white',\n            cursor: 'pointer'\n        }\n    },\n\n    sidebarSettingsRight: {\n        textTransform: 'uppercase',\n        fontSize: '.7rem',\n        letterSpacing: '.1rem',\n        display: 'flex',\n        alignItems: 'center',\n        padding: '5px 12px 5px 0',\n        borderRadius: 1,\n        color: 'rgba(255, 255, 255, 0.5)',\n        transition: 'all .3s',\n\n        '&:hover': {\n            color: 'white',\n            cursor: 'pointer'\n        }\n    },\n\n    settingsContainer: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n\n    settingsText: {\n        paddingLeft: '10px',\n        paddingBottom: '5px'\n    },\n\n    sidebarAddNew: {\n        marginTop: '10px',\n        marginBottom: '-6px',\n        height: '44px',\n        fontWeight: 500,\n        padding: '0 20px',\n        display: 'flex',\n        alignItems: 'center',\n        boxShadow: 'rgba(0, 0, 0, 0.2) 0px 1px 2px 0px',\n        textTransform: 'uppercase',\n        fontSize: '.7rem',\n        letterSpacing: '.1rem',\n        color: 'rgba(255, 255, 255, 0.527)',\n        justifyContent: 'center',\n        transition: 'all .3s',\n\n        '&:hover': {\n            color: 'white',\n            backgroundColor: 'rgba(255, 255, 255, .15)',\n            cursor: 'pointer'\n        }\n    },\n\n    sidebarReset: {\n        height: '44px',\n        fontWeight: 500,\n        padding: '0 20px',\n        display: 'flex',\n        alignItems: 'center',\n        boxShadow: 'rgba(0, 0, 0, 0.2) 0px 1px 2px 0px',\n        textTransform: 'uppercase',\n        fontSize: '.7rem',\n        letterSpacing: '.1rem',\n        color: 'rgba(0, 0, 0, 0.7)',\n        justifyContent: 'center',\n        backgroundColor: 'rgba(255, 255, 255, .3)',\n        opacity: '.5',\n        transition: 'all .3s',\n\n        '&:hover': {\n            opacity: '1',\n            color: 'rgba(0, 0, 0, 0.9)',\n            backgroundColor: 'rgba(255, 255, 255, .7)',\n            cursor: 'pointer'\n        }\n    }\n});\n","import React from 'react';\n\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport DraggableList from 'react-draggable-list';\nimport SidebarListElement from './Sidebar-list-element';\n\nimport useStyles from './sidebarStyles';\n\nexport default function SwipeableTemporaryDrawer(props) {\n    const {\n        exerciseList,\n        onListChange,\n        addNew,\n        openSettingsWindow,\n        removeExercise,\n        reset,\n        resetAll,\n        editExercise\n    } = props;\n    const len = exerciseList.length;\n    const classes = useStyles();\n    const [state, setState] = React.useState(false);\n\n    const toggleDrawer = open => event => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState(open);\n    };\n\n    return (\n        <div>\n            <Button className={classes.btn} onClick={toggleDrawer(true)}>\n                Customize Your Workout\n            </Button>\n\n            <SwipeableDrawer open={state} onClose={toggleDrawer(false)} onOpen={toggleDrawer(true)}>\n                <div className={classes.list} role='presentation'>\n                    <div className={classes.sidebarHeader}>\n                        <h1 className={classes.sidebarTitle}>Your Workout</h1>\n                        <ChevronLeftIcon\n                            className={classes.sidebarChevron}\n                            onClick={toggleDrawer(false)}\n                            fontSize='large'\n                        />\n                    </div>\n\n                    <div className={classes.sidebarSubitle}>\n                        {len} {len === 1 ? 'Exercise' : 'Exercises'}\n                    </div>\n\n                    <div className={classes.settingsContainer}>\n                        <div className={classes.sidebarSettings} onClick={openSettingsWindow}>\n                            <div className={classes.settingsIcon} fontSize='small'>\n                                <SettingsIcon />\n                            </div>\n                            <div className={classes.settingsText}>Set Intervals</div>\n                        </div>\n\n                        <div className={classes.sidebarSettingsRight} onClick={resetAll}>\n                            <div className={classes.settingsIcon} fontSize='small'>\n                                <SettingsIcon />\n                            </div>\n                            <div className={classes.settingsText}>Reset</div>\n                        </div>\n                    </div>\n\n                    <Divider />\n\n                    <div className={classes.sidebarAddNew} onClick={addNew}>\n                        Add New Exercise\n                    </div>\n\n                    <List>\n                        <DraggableList\n                            list={exerciseList}\n                            itemKey='id'\n                            template={SidebarListElement}\n                            onMoveEnd={newList => onListChange(newList)}\n                            padding={0}\n                            constrainDrag={true}\n                            commonProps={{\n                                removeExercise: removeExercise,\n                                editExercise: editExercise\n                            }}\n                        />\n                    </List>\n\n                    <div className={classes.sidebarReset} onClick={reset}>\n                        RESET EXERCISES\n                    </div>\n                </div>\n            </SwipeableDrawer>\n        </div>\n    );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n    errorSuppresion: {\n\n    },\n\n    '@global': {\n        // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\n        '.MuiDialog-paper': {\n          color: \"var(--popup-title)\",\n          backgroundColor: \"var(--popup-bg)\",\n          minWidth: \"360px\",\n        },\n        '.MuiInputBase-input': {\n            color: \"var(--popup-title)\"\n        },\n        '.MuiDialogContentText-root': {\n            color: \"var(--popup-text)\"\n        },\n        '.MuiInputLabel-root.Mui-focused': {\n            color: \"var(--popup-text)\"\n        },\n        '.MuiFormLabel-root': {\n            color: \"var(--popup-text)\"\n        },\n        '.MuiInput-underline': {\n            '&:after': {\n                borderBottom: \"1px solid var(--popup-underline)\",\n            }\n        },\n        '.MuiButton-root': {\n            color: \"var(--popup-btn-text) \",\n        },\n    },\n\n})","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useStyles from \"./addNew-popup.styles\"\n\nexport default function FormDialog(props) {\n    const classes = useStyles();\n    const [newExercise, setNewExercise] = React.useState(\"\");\n    const open = true;\n\n  const handleClose = () => {\n    props.closePopup();\n  };\n\n  const handleSubmit = () => {\n      handleClose();\n      props.addNewExercise(newExercise);\n      setNewExercise(\"\");\n  }\n\n  const handleChange = (e) => {\n      setNewExercise(e.target.value)\n  }\n\n  return (\n    <div className={classes.errorSuppresion}>\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add New Exercise</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Reorder exercises by dragging.\n            </DialogContentText>\n            <TextField\n              onChange={handleChange}\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"EXERCISE NAME\"\n              type=\"text\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmit} color=\"primary\" disabled={newExercise.length === 0}>\n              Add\n            </Button>\n          </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n    inputHolder: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-evenly\"\n    },\n    formInput: {\n        margin: \"20px 10px 0px 0\",\n        padding: \"25px 0\",\n        width: \"33%\",\n    },\n    '@global': {\n        // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\n        '.MuiDialog-paper': {\n          color: \"var(--popup-title)\",\n          backgroundColor: \"var(--popup-bg)\"\n        },\n        '.MuiInputBase-input': {\n            color: \"var(--popup-title)\"\n        },\n        '.MuiButton-root': {\n            color: \"var(--popup-btn-text)\",\n        },\n        '.MuiDialogContentText-root': {\n            color: \"var(--popup-text)\",\n        },\n        '.MuiInputLabel-root.Mui-focused': {\n            color: \"var(--popup-text)\"\n        },\n        '.MuiFormLabel-root': {\n            color: \"var(--popup-text)\",\n        },\n        '.MuiInput-underline': {\n            '&:after': {\n                borderBottom: \"1px solid var(--popup-underline)\",\n            }\n        }\n      },\n\n})","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useStyles from \"./settingsPopus.styles\"\n\nexport default function FormDialog(props) {\n    const workoutInterval = props.intervals.w;\n    const restInterval = props.intervals.r;\n    const classes = useStyles();\n    const [newWorkoutInterval, setWorkoutInterval] = React.useState(workoutInterval);\n    const [newRestInterval, setRestInterval] = React.useState(restInterval);\n\n    const open = true;\n\n  const handleClose = () => {\n    props.closePopup();\n  };\n\n  const handleSubmit = () => {\n      handleClose();\n      if(workoutInterval !== newWorkoutInterval || restInterval !== newRestInterval){\n        props.updateIntervals({workoutInterval: newWorkoutInterval, restInterval: newRestInterval});\n      }\n  }\n\n  const handleChange = (e) => {\n\n    if(e.target.id === \"Workout Interval\"){\n      setWorkoutInterval(Number(e.target.value))\n      return\n    }\n    \n    setRestInterval(Number(e.target.value))\n  }\n\n  return (\n    <div>\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Set Workout & Rest Intervals</DialogTitle>\n        <DialogContent>\n          <div className={classes.inputHolder}>\n            <TextField\n              className={classes.formInput}\n              onChange={handleChange}\n              autoFocus\n              id=\"Workout Interval\"\n              label=\"WORKOUT INTERVAL (SECONDS)\"\n              type=\"number\"\n              InputProps={{ inputProps: { min: 5, max: 10000 } }}\n              defaultValue={newWorkoutInterval}\n              fullWidth\n            />\n            <TextField\n              className={classes.formInput}\n              onChange={handleChange}\n              id=\"Rest Interval\"\n              label=\"REST INTERVAL (SECONDS)\"\n              type=\"number\"\n              InputProps={{ inputProps: { min: 1, max: 1000, } }}\n              defaultValue={newRestInterval}\n              fullWidth\n              onKeyDown={() => false}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\" disabled={Number(newWorkoutInterval) <= 0 || Number(newRestInterval) <= 0\n                                                                  || newWorkoutInterval === \"\" || newRestInterval === \"\" }>\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","\n// function init() {\n//     // list of languages is probably not loaded, wait for it\n//     if(window.speechSynthesis.getVoices().length === 0) {\n//         window.speechSynthesis.addEventListener('voiceschanged', function() {\n//             textToSpeech();\n//         });\n//     }\n//     else {\n//         // languages list available, no need to wait\n//         textToSpeech()\n//     }\n// }\n\nexport default function textToSpeech(text, desiredVoice=1) {\n\t// get all voices that browser offers\n\tlet available_voices = window.speechSynthesis.getVoices();\n\n\t// this will hold an english voice\n\tlet english_voice1 = '';\n\tlet english_voice2 = '';\n\tlet ind = 0;\n\n\t// find voice by language locale \"en-US\"\n\t// if not then select the first voice\n\tfor(let i=0; i<available_voices.length; i++) {\n\t\tif(available_voices[i].lang === 'en-US') {\n\t\t\tenglish_voice1 = available_voices[i];\n\t\t\tind = i+1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor(let i=ind; i<available_voices.length; i++) {\n\t\tif(available_voices[i].name === 'Samantha') {\n\t\t\tenglish_voice2 = available_voices[i];\n\t\t\tind = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(english_voice1 === '')\n\t\tenglish_voice1 = available_voices[0];\n\n\tif(english_voice2 === '')\n\t\tenglish_voice2 = available_voices[0];\n\n\t// new SpeechSynthesisUtterance object\n\tlet utter = new SpeechSynthesisUtterance();\n\tutter.rate = 1.1;\n\tutter.pitch = 1;\n\tutter.text = text;\n\tif (desiredVoice === 1) {\n\t\tutter.voice = english_voice1;\n\t} else\n\t\tutter.voice = english_voice2\n\n\t// speak\n\twindow.speechSynthesis.speak(utter);\n}","import React, {useState, useEffect, useCallback} from \"react\";\nimport PauseIcon from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport textToSpeech from \"../speech.helper\"\nimport \"./timer.styles.scss\"\n\nexport default function Timer(props){\n    const { runTime, alternate, isResting, precount, setPrecount, nextExercise, currentExercise, reset } = props;\n    const [isRunning, setIsRunning] = useState(false);\n    const [seconds, setSeconds] = useState(0);\n    const timeRemaining = runTime - seconds;\n\n    const goPrecount = useCallback(() => {\n\n        if(precount === 1)\n            textToSpeech(`Go. ${currentExercise}`);\n        else if (precount > 0)\n            textToSpeech(precount - 1);\n\n        setPrecount(precount - 1);\n        \n    }, [currentExercise, precount, setPrecount])\n\n\n    const timeZero = useCallback(() => {\n\n        if(nextExercise === null){\n            setIsRunning(false)\n            setSeconds(seconds + 1) //timeremaining should be 0 after this. Triggers \"great job\"\n            textToSpeech(\"Great job\", \"Samantha\")\n        } else {\n            if(isResting) {\n                textToSpeech(`Go. ${nextExercise}`)\n            } else {\n                textToSpeech(`Rest. Next up, ${nextExercise}`, \"Samantha\")\n            }\n\n            alternate();\n            setSeconds(0);\n        }\n\n    }, [isResting, nextExercise, alternate, seconds])\n\n\n    const timer = useCallback(() => {\n\n        if(precount >= 0) {\n            goPrecount();\n            return\n        } \n\n        if(runTime === \"stop\") {\n            stop();\n            return\n        }\n\n        if(timeRemaining <= 1) {\n            timeZero();\n            return\n        }\n\n        if (timeRemaining <= 6) {    \n            if(!isResting)\n                textToSpeech(timeRemaining - 1, \"Samantha\");\n            else if (timeRemaining <= 4)\n                textToSpeech(timeRemaining - 1);\n        } \n\n        setSeconds(seconds + 1)\n        \n    }, [seconds, runTime, timeRemaining, precount, isResting, goPrecount, timeZero ])\n    \n    useEffect(\n        () => {\n            if(reset) {\n                resetWorkout();\n                return\n            }\n\n            if(isRunning){\n                const id = setInterval(timer, 1000);\n                return () => clearInterval(id);\n            }\n        }, [isRunning, timer, reset]\n    );\n\n    const start = () => {\n        setIsRunning(true);\n    }\n\n    const stop = () => {\n        setIsRunning(false)\n    }\n\n    const resetWorkout = () => {\n        setIsRunning(false)\n        setSeconds(0);\n    }\n\n    const timerButtons =    <div className=\"icon-button\">\n                                {!isRunning ? \n                                    <PlayCircleFilledIcon fontSize=\"large\" onClick={start}/> \n                                    :\n                                    <PauseIcon fontSize=\"large\" onClick={stop}/>\n                                }\n                            </div>\n                        \n    \n    const isWorkingOut = (timeRemaining === 0 && nextExercise !== null && isResting) || (isRunning && !isResting && precount <=0 && timeRemaining >= 1);\n\n    return (\n        <div \n            className=\"timer-gradient-wrapper\"\n            style={isWorkingOut ? {background: \"linear-gradient(200deg, var(--highlight-color), var(--deeper-color))\"} : null} \n        >\n            <div className=\"timer-container\">\n                    {precount >= 0 && isRunning ? \n                            precount === 0 ? <div className=\"timer-font\">GO{timerButtons}</div>\n                                    : precount <= 3 ? <div className=\"timer-font\">{precount}{timerButtons}</div>\n                                        : reset ? <div className=\"timer-font\">{timeRemaining}{timerButtons}</div>\n                                            : <div className=\"timer-fancy\">Let's go!</div> //prevents flicker upon reset\n                                            \n                    : isNaN(runTime) ? <div className=\"timer-font\">0 {timerButtons}</div>\n                        : timeRemaining !== 0 ? <div className=\"timer-font\">{timeRemaining}{timerButtons}</div>\n                            : nextExercise === null ? <div className=\"timer-fancy\">GREAT JOB!</div>\n                                : isResting ? <div className=\"timer-font\">GO{timerButtons}</div> \n                                    : <div className=\"timer-font\">0{timerButtons}</div>\n                    }    \n            </div>\n        </div>\n    )\n}\n\n","import React, {useState} from \"react\";\nimport Timer from \"../Timer/Timer\";\nimport \"./clock.styles.scss\";\n\nexport default function Watch(props){\n    const { exerciseList, workoutInterval, restInterval } = props;\n    const [isResting, setIsResting] = useState(false);\n    const [index, setIndex] = useState(0);\n    const [precount, setPrecount] = useState(4);\n    const [reset, setReset] = useState(false);\n\n    let currentExercise = \"\";\n    let nextExercise = \"\";\n    let time = isResting ? restInterval : workoutInterval;\n\n    const alternateBetweenResting = () => {\n        \n        if(!isResting){\n            setIsResting(true)\n            time = restInterval;\n        } else {\n            setIndex(index + 1);\n            setIsResting(false)\n            time = workoutInterval;\n        }\n    }\n\n    const resetWorkout = () => {\n        setIndex(0);\n        setPrecount(4);\n        setIsResting(false);\n        setReset(true);\n        setTimeout(() => setReset(false), 250)\n    }\n\n    if(index < exerciseList.length){\n        currentExercise = exerciseList[index].name;\n\n        if(exerciseList.length === 1 || index + 1 === exerciseList.length){\n            nextExercise = null\n        } else {\n            nextExercise = exerciseList[index + 1].name\n        }\n    } else {\n        time = \"stop\"\n    }\n\n\n    let exerciseIndexMsg = `${index + 1}/${exerciseList.length}`\n    let currentExerciseMsg = <div className=\"clock-exercise\">\n                                {isResting ? \"Rest\" : currentExercise}\n                            </div>\n\n    if(index >= exerciseList.length){\n        exerciseIndexMsg = `${index}/${exerciseList.length}`;\n        currentExerciseMsg = \"\"\n    }\n    \n    return (\n        <div>\n            {/* <button className=\"clock-button\" onClick={resetWorkout}>Restart Workout</button> */}\n\n            <div className=\"clock-container\">\n                <div>{exerciseIndexMsg}</div>\n                <div className=\"clock-current-exercise\">\n                    {currentExerciseMsg}\n                </div>\n                <Timer \n                    runTime={time} \n                    alternate={alternateBetweenResting} \n                    precount={precount} \n                    setPrecount={setPrecount} \n                    isResting={isResting}\n                    currentExercise={currentExercise}\n                    nextExercise={nextExercise}\n                    reset={reset}\n                />\n                <div className=\"clock-up-next\">\n                    {nextExercise === null ? \" \" : \n                        <div>\n                            Next Up\n                            <div className=\"clock-next-exercise\">{nextExercise}</div>\n                        </div>\n                    }\n                </div>\n            </div>\n            <div className=\"clock-start-over-container\">\n                <button className=\"clock-button\" onClick={resetWorkout}>Restart Workout</button>\n            </div>\n        </div> \n    )\n}","import uuid from 'uuid/v4'\n\nexport default [ \n    {id: uuid(), name: 'Jumping Jacks'}, \n    {id: uuid(), name: 'Wall Sit'}, \n    {id: uuid(), name: 'Push-ups'}, \n    {id: uuid(), name: 'Sit-ups'}, \n    {id: uuid(), name: 'Step Up Onto Chair'}, \n    {id: uuid(), name: 'Squats'}, \n    {id: uuid(), name: 'Tricep-dips'}, \n    {id: uuid(), name: 'Plank'}, \n    {id: uuid(), name: 'High-Knees Running'}, \n    {id: uuid(), name: 'Lunges'}, \n    {id: uuid(), name: 'Push-up w/rotation'}, \n    {id: uuid(), name: 'Side Plank 1'}, \n    {id: uuid(), name: 'Side Plank 2'}\n  ]","import React from 'react';\nimport './App.css';\nimport Sidebar from './components/sidebar/Sidebar';\nimport AddNewPopup from './components/addNew-popup/addNewPopup';\nimport SettingsPopup from './components/settingsPopup/settingsPopup';\nimport Clock from './components/Clock/Clock.component.jsx';\n\nimport exerciseList from './exerciseList';\nimport uuid from 'uuid/v4';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            exerciseList: JSON.parse(window.localStorage.getItem('exerciseList')) || exerciseList,\n            workoutInterval: JSON.parse(window.localStorage.getItem('workoutInterval')) || 30,\n            restInterval: JSON.parse(window.localStorage.getItem('restInterval')) || 10,\n            isIntervalDialogOpen: false,\n            isAddNewDialogOpen: false\n        };\n    }\n\n    onListChange = newList => {\n        this.setState({ exerciseList: newList });\n        window.localStorage.setItem('exerciseList', JSON.stringify(newList));\n    };\n\n    openAddNew = () => {\n        this.setState({ isAddNewDialogOpen: true });\n    };\n\n    openSettingsWindow = () => {\n        this.setState({ isIntervalDialogOpen: true });\n    };\n\n    closeAddNewPopup = () => {\n        this.setState({ isAddNewDialogOpen: false });\n    };\n\n    closeSettingsWindow = () => {\n        this.setState({ isIntervalDialogOpen: false });\n    };\n\n    addNewExercise = newExercise => {\n        const updatedList = [...this.state.exerciseList, { id: uuid(), name: newExercise }];\n        this.setState({ exerciseList: updatedList });\n        window.localStorage.setItem('exerciseList', JSON.stringify(updatedList));\n    };\n\n    removeExercise = exerciseToRemove => {\n        const updatedList = this.state.exerciseList.filter(\n            exercise => exercise.id !== exerciseToRemove.id\n        );\n        this.setState({ exerciseList: updatedList });\n        window.localStorage.setItem('exerciseList', JSON.stringify(updatedList));\n    };\n\n    editExercise = updatedExercise => {\n        const existingList = this.state.exerciseList;\n        const updatedList = existingList.map(exercise => {\n            if (exercise.id === updatedExercise.id) {\n                return updatedExercise;\n            } else {\n                return exercise;\n            }\n        });\n        this.setState({ exerciseList: updatedList });\n        window.localStorage.setItem('exerciseList', JSON.stringify(updatedList));\n    };\n\n    updateIntervals = newTimes => {\n        const { workoutInterval, restInterval } = newTimes;\n        this.setState({ workoutInterval: workoutInterval, restInterval: restInterval });\n        window.localStorage.setItem('workoutInterval', JSON.stringify(workoutInterval));\n        window.localStorage.setItem('restInterval', JSON.stringify(restInterval));\n    };\n\n    reset = () => {\n        this.setState({ exerciseList: exerciseList });\n        window.localStorage.setItem('exerciseList', JSON.stringify(exerciseList));\n    };\n\n    resetAll = () => {\n        this.setState({ exerciseList: exerciseList });\n        window.localStorage.setItem('exerciseList', JSON.stringify(exerciseList));\n\n        this.setState({ workoutInterval: 30, restInterval: 10 });\n        window.localStorage.setItem('workoutInterval', JSON.stringify(30));\n        window.localStorage.setItem('restInterval', JSON.stringify(10));\n    };\n\n    render() {\n        const {\n            exerciseList,\n            isAddNewDialogOpen,\n            isIntervalDialogOpen,\n            workoutInterval,\n            restInterval\n        } = this.state;\n        const {\n            onListChange,\n            openAddNew,\n            closeAddNewPopup,\n            addNewExercise,\n            openSettingsWindow,\n            closeSettingsWindow,\n            updateIntervals,\n            removeExercise,\n            reset,\n            resetAll,\n            editExercise\n        } = this;\n        return (\n            <div className='App'>\n                <Sidebar\n                    exerciseList={exerciseList}\n                    onListChange={onListChange}\n                    addNew={openAddNew}\n                    openSettingsWindow={openSettingsWindow}\n                    removeExercise={removeExercise}\n                    reset={reset}\n                    resetAll={resetAll}\n                    editExercise={editExercise}\n                />\n                {isAddNewDialogOpen && (\n                    <AddNewPopup closePopup={closeAddNewPopup} addNewExercise={addNewExercise} />\n                )}\n                {isIntervalDialogOpen && (\n                    <SettingsPopup\n                        closePopup={closeSettingsWindow}\n                        intervals={{ w: workoutInterval, r: restInterval }}\n                        updateIntervals={updateIntervals}\n                    />\n                )}\n                <Clock\n                    exerciseList={exerciseList}\n                    workoutInterval={workoutInterval}\n                    restInterval={restInterval}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/sidebar/Sidebar-list-element.jsx","components/sidebar/sidebarStyles.js","components/sidebar/Sidebar.jsx","components/addNew-popup/addNew-popup.styles.js","components/addNew-popup/addNewPopup.js","components/settingsPopup/settingsPopus.styles.js","components/settingsPopup/settingsPopup.js","components/speech.helper.js","components/Timer/Timer.jsx","components/Clock/Clock.component.jsx","exerciseList.js","App.js","serviceWorker.js","index.js"],"names":["SidebarListElement","props","handleRemove","commonProps","removeExercise","item","handleEdit","setState","isEditing","handleChange","e","editedExercise","target","value","handleSubmit","preventDefault","editExercise","id","name","state","this","itemSelected","dragHandleProps","scale","shadow","dragged","onSubmit","className","type","onChange","autoFocus","style","transform","boxShadow","fontSize","onClick","React","Component","makeStyles","list","width","color","padding","btn","textTransform","letterSpacing","transition","backgroundColor","sidebarHeader","display","alignItems","paddingTop","sidebarChevron","alignContent","marginTop","borderRadius","marginLeft","sidebarTitle","cursor","margin","sidebarSubitle","fontWeight","sidebarSettings","settingsText","paddingLeft","paddingBottom","sidebarAddNew","marginBottom","height","justifyContent","sidebarReset","SwipeableTemporaryDrawer","exerciseList","onListChange","addNew","openSettingsWindow","reset","len","length","classes","useStyles","useState","toggleDrawer","open","event","key","Button","SwipeableDrawer","onClose","onOpen","role","settingsIcon","Divider","List","itemKey","template","onMoveEnd","newList","constrainDrag","errorSuppresion","minWidth","borderBottom","FormDialog","newExercise","setNewExercise","handleClose","closePopup","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","label","fullWidth","DialogActions","addNewExercise","disabled","inputHolder","formInput","workoutInterval","intervals","w","restInterval","r","newWorkoutInterval","setWorkoutInterval","newRestInterval","setRestInterval","Number","InputProps","inputProps","min","max","defaultValue","onKeyDown","updateIntervals","textToSpeech","text","desiredVoice","available_voices","window","speechSynthesis","getVoices","english_voice1","english_voice2","ind","i","lang","utter","SpeechSynthesisUtterance","rate","pitch","voice","speak","Timer","runTime","alternate","isResting","precount","setPrecount","nextExercise","currentExercise","isRunning","setIsRunning","seconds","setSeconds","timeRemaining","goPrecount","useCallback","timeZero","timer","stop","useEffect","resetWorkout","setInterval","clearInterval","timerButtons","isWorkingOut","background","isNaN","Watch","setIsResting","index","setIndex","setReset","time","exerciseIndexMsg","currentExerciseMsg","setTimeout","uuid","App","openAddNew","isAddNewDialogOpen","isIntervalDialogOpen","closeAddNewPopup","closeSettingsWindow","updatedList","exerciseToRemove","filter","exercise","updatedExercise","console","log","map","newTimes","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d460ec0.chunk.js","sourcesContent":["import React from 'react';\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nimport \"./Sidebar-list-element.scss\"\n    \nclass SidebarListElement extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isEditing: false,\n      editedExercise: this.props.item.name,\n    }\n  }\n\n  handleRemove = () => {\n    this.props.commonProps.removeExercise(this.props.item)\n  }\n\n  handleEdit = () => {\n    this.setState({isEditing: true})\n  }\n\n  handleChange = (e) => {\n    this.setState({editedExercise: e.target.value})\n  }\n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.commonProps.editExercise({id: this.props.item.id, name: this.state.editedExercise})\n    this.setState({isEditing: false})\n  }\n\n  render() {\n      const {item, itemSelected, dragHandleProps} = this.props;\n      const { isEditing, editedExercise } = this.state;\n      const { handleChange, handleSubmit, handleEdit, handleRemove} = this;\n      const scale = (itemSelected * 0.05) + 1;\n      const shadow = itemSelected * 15 + 1;\n      const dragged = itemSelected !== 0;\n      \n      return (\n        isEditing ? \n          <form onSubmit={handleSubmit} className=\"list-element-form\">\n            <input \n              type=\"text\"\n              className=\"list-element-input\" \n              value={editedExercise} \n              onChange={handleChange}\n              autoFocus\n            >\n            </input>\n            <button className=\"list-element-update-btn\"> <CheckCircleIcon /> </button>\n          </form>\n        : \n          <div\n            className={dragged ? \"itemDragged\" : \"item\"}\n            style={{\n              transform: `scale(${scale})`,\n              boxShadow: `rgba(0, 0, 0, 0.2) 0px ${shadow}px ${2 * shadow}px 0px`\n            }}\n          >\n\n            <div className=\"dragHandle\" {...dragHandleProps}> \n              <DragIndicatorIcon fontSize=\"small\"/> \n            </div>\n\n            <div className=\"list-element-title\">{ item.name }</div>\n            <div className=\"list-element-icon-container\">\n              <div className=\"list-element-icon\" onClick={handleEdit}> \n                <EditIcon fontSize=\"small\"/>\n              </div>\n              <div className=\"list-element-icon\" onClick={handleRemove}>\n                <DeleteIcon fontSize=\"small\"/>\n              </div>\n            </div>\n          </div>\n    );\n  }\n}\n\nexport default SidebarListElement;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n\n    list: {\n      width: 360,\n      color: 'white',\n      padding: '0 30px',\n    }, \n    btn: {\n      padding: \"10px 20px\",\n      textTransform: \"uppercase\",\n      fontSize: \".7rem\",\n      letterSpacing: \".1rem\",\n      color: \"var(--highlight-dim)\",\n      transition: \"all .4s ease-in-out\",\n  \n      '&:hover': {\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\n        color: \"var(--highlight-color)\",\n        letterSpacing: \".15rem\",\n      }\n    },\n    sidebarHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      paddingTop: \"20px\",\n    },\n    sidebarChevron: {\n      display: \"flex\",\n      alignContent: \"center\",\n      marginTop: \"3px\",\n      borderRadius: \"20px\",\n      backgroundColor: \"rgba(255, 255, 255, 0.10)\",\n      marginLeft: \"auto\",\n      transition: \"all .6s\",\n      \n      \"&:hover\": {\n        backgroundColor: \"rgba(255, 255, 255, 0.25)\",\n        transform: \"scale(1.2)\",\n      }\n    },\n    sidebarTitle: {\n        cursor: \"default\",\n        margin: 0,\n\n    },\n    sidebarSubitle: {\n      textTransform: \"uppercase\",\n      fontWeight: 500,\n      marginTop: \"0px\",\n      padding: \"0px 0px 10px 0px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      fontSize: \".7rem\",\n      letterSpacing: \".1rem\",\n      cursor: \"default\",\n    },\n\n    sidebarSettings: {\n      width: \"45%\",\n      textTransform: \"uppercase\",\n      fontSize: \".7rem\",\n      letterSpacing: \".1rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: \"5px 0 5px 0\",\n      borderRadius: 1,\n      color: \"rgba(255, 255, 255, 0.5)\",\n      transition: \"all .3s\",\n\n      \"&:hover\": {\n        color: \"white\",\n        cursor: \"pointer\"\n      }\n      \n    },\n    \n    settingsText: {\n      paddingLeft: \"10px\",\n      paddingBottom: \"5px\"\n    },\n\n    sidebarAddNew: {\n        marginTop: \"10px\",\n        marginBottom: \"-6px\",\n        height: \"46px\",\n        fontWeight: 500,\n        padding: \"0 20px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        boxShadow: \"rgba(0, 0, 0, 0.2) 0px 1px 2px 0px\",\n        textTransform: \"uppercase\",\n        fontSize: \".7rem\",\n        letterSpacing: \".1rem\",\n        color: \"rgba(255, 255, 255, 0.527)\",\n        justifyContent: \"center\",\n        transition: \"all .3s\",\n        \n        \"&:hover\": {\n            color: \"white\",\n            backgroundColor: \"rgba(255, 255, 255, .15)\",\n            cursor: \"pointer\",\n        }\n    },\n\n    sidebarReset: {\n      marginTop: \"40px\",\n      height: \"46px\",\n      fontWeight: 500,\n      padding: \"0 20px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      boxShadow: \"rgba(0, 0, 0, 0.2) 0px 1px 2px 0px\",\n      textTransform: \"uppercase\",\n      fontSize: \".7rem\",\n      letterSpacing: \".1rem\",\n      color: \"rgba(0, 0, 0, 0.7)\",\n      justifyContent: \"center\",\n      backgroundColor: \"rgba(255, 255, 255, .3)\",\n      transition: \"all .3s\",\n      \n      \"&:hover\": {\n          color: \"rgba(0, 0, 0, 0.9)\",\n          backgroundColor: \"rgba(255, 255, 255, .7)\",\n          cursor: \"pointer\",\n      }\n  }\n  });\n\n\n\n\n\n","import React from 'react';\n\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport DraggableList from \"react-draggable-list\";\nimport SidebarListElement from \"./Sidebar-list-element\"\n\nimport useStyles from './sidebarStyles';\n\nexport default function SwipeableTemporaryDrawer(props) {\n  const { exerciseList, onListChange, addNew, openSettingsWindow, removeExercise, reset, editExercise } = props;\n  const len = exerciseList.length;\n  const classes = useStyles();\n  const [state, setState] = React.useState(false);\n\n  const toggleDrawer = (open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(open);\n  };\n\n  return (\n    <div>\n      <Button className={classes.btn} onClick={toggleDrawer(true)}>Customize Your Workout</Button>\n\n      <SwipeableDrawer\n        open={state}\n        onClose={toggleDrawer(false)}\n        onOpen={toggleDrawer(true)}\n      >\n        <div\n          className={classes.list}\n          role=\"presentation\"\n        >\n          <div className={classes.sidebarHeader}>\n            <h1 className={classes.sidebarTitle}>Your Workout</h1>\n            <ChevronLeftIcon className={classes.sidebarChevron} onClick={toggleDrawer(false)} fontSize=\"large\" />\n          </div>\n\n          <div className={classes.sidebarSubitle}>\n            {len} {len === 1 ? \"Exercise\" : \"Exercises\"}\n          </div>\n\n          <div className={classes.sidebarSettings} onClick={openSettingsWindow}>\n            <div className={classes.settingsIcon} fontSize=\"small\"><SettingsIcon /></div>\n            <div className={classes.settingsText}>Set Intervals</div>\n          </div>\n\n          <Divider />\n\n          <div className={classes.sidebarAddNew} onClick={addNew}>\n              Add New Exercise\n            </div>\n\n          <List >\n            <DraggableList \n              list={exerciseList} \n              itemKey=\"id\"\n              template={SidebarListElement} \n              onMoveEnd={newList => onListChange(newList)}\n              padding={0}\n              constrainDrag={true}\n              commonProps={{removeExercise: removeExercise, editExercise: editExercise}}\n            />\n          </List>\n\n          {exerciseList.length === 0 && \n            <div className={classes.sidebarReset} onClick={reset}>\n              RESET EXERCISES\n            </div>\n          }\n\n        </div>\n      </SwipeableDrawer>\n\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n    errorSuppresion: {\n\n    },\n\n    '@global': {\n        // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\n        '.MuiDialog-paper': {\n          color: \"var(--popup-title)\",\n          backgroundColor: \"var(--popup-bg)\",\n          minWidth: \"360px\",\n        },\n        '.MuiInputBase-input': {\n            color: \"var(--popup-title)\"\n        },\n        '.MuiDialogContentText-root': {\n            color: \"var(--popup-text)\"\n        },\n        '.MuiInputLabel-root.Mui-focused': {\n            color: \"var(--popup-text)\"\n        },\n        '.MuiFormLabel-root': {\n            color: \"var(--popup-text)\"\n        },\n        '.MuiInput-underline': {\n            '&:after': {\n                borderBottom: \"1px solid var(--popup-underline)\",\n            }\n        },\n        '.MuiButton-root': {\n            color: \"var(--popup-btn-text) \",\n        },\n    },\n\n})","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useStyles from \"./addNew-popup.styles\"\n\nexport default function FormDialog(props) {\n    const classes = useStyles();\n    const [newExercise, setNewExercise] = React.useState(\"\");\n    const open = true;\n\n  const handleClose = () => {\n    props.closePopup();\n  };\n\n  const handleSubmit = () => {\n      handleClose();\n      props.addNewExercise(newExercise);\n      setNewExercise(\"\");\n  }\n\n  const handleChange = (e) => {\n      setNewExercise(e.target.value)\n  }\n\n  return (\n    <div className={classes.errorSuppresion}>\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add New Exercise</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Reorder exercises by dragging.\n            </DialogContentText>\n            <TextField\n              onChange={handleChange}\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"EXERCISE NAME\"\n              type=\"text\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmit} color=\"primary\" disabled={newExercise.length === 0}>\n              Add\n            </Button>\n          </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n    inputHolder: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-evenly\"\n    },\n    formInput: {\n        margin: \"20px 10px 0px 0\",\n        padding: \"25px 0\",\n        width: \"33%\",\n    },\n    '@global': {\n        // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\n        '.MuiDialog-paper': {\n          color: \"var(--popup-title)\",\n          backgroundColor: \"var(--popup-bg)\"\n        },\n        '.MuiInputBase-input': {\n            color: \"var(--popup-title)\"\n        },\n        '.MuiButton-root': {\n            color: \"var(--popup-btn-text)\",\n        },\n        '.MuiDialogContentText-root': {\n            color: \"var(--popup-text)\",\n        },\n        '.MuiInputLabel-root.Mui-focused': {\n            color: \"var(--popup-text)\"\n        },\n        '.MuiFormLabel-root': {\n            color: \"var(--popup-text)\",\n        },\n        '.MuiInput-underline': {\n            '&:after': {\n                borderBottom: \"1px solid var(--popup-underline)\",\n            }\n        }\n      },\n\n})","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useStyles from \"./settingsPopus.styles\"\n\nexport default function FormDialog(props) {\n    const workoutInterval = props.intervals.w;\n    const restInterval = props.intervals.r;\n    const classes = useStyles();\n    const [newWorkoutInterval, setWorkoutInterval] = React.useState(workoutInterval);\n    const [newRestInterval, setRestInterval] = React.useState(restInterval);\n\n    const open = true;\n\n  const handleClose = () => {\n    props.closePopup();\n  };\n\n  const handleSubmit = () => {\n      handleClose();\n      if(workoutInterval !== newWorkoutInterval || restInterval !== newRestInterval){\n        props.updateIntervals({workoutInterval: newWorkoutInterval, restInterval: newRestInterval});\n      }\n  }\n\n  const handleChange = (e) => {\n\n    if(e.target.id === \"Workout Interval\"){\n      setWorkoutInterval(Number(e.target.value))\n      return\n    }\n    \n    setRestInterval(Number(e.target.value))\n  }\n\n  return (\n    <div>\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Set Workout & Rest Intervals</DialogTitle>\n        <DialogContent>\n          <div className={classes.inputHolder}>\n            <TextField\n              className={classes.formInput}\n              onChange={handleChange}\n              autoFocus\n              id=\"Workout Interval\"\n              label=\"WORKOUT INTERVAL (SECONDS)\"\n              type=\"number\"\n              InputProps={{ inputProps: { min: 5, max: 10000 } }}\n              defaultValue={newWorkoutInterval}\n              fullWidth\n            />\n            <TextField\n              className={classes.formInput}\n              onChange={handleChange}\n              id=\"Rest Interval\"\n              label=\"REST INTERVAL (SECONDS)\"\n              type=\"number\"\n              InputProps={{ inputProps: { min: 1, max: 1000, } }}\n              defaultValue={newRestInterval}\n              fullWidth\n              onKeyDown={() => false}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\" disabled={Number(newWorkoutInterval) <= 0 || Number(newRestInterval) <= 0\n                                                                  || newWorkoutInterval === \"\" || newRestInterval === \"\" }>\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","\n// function init() {\n//     // list of languages is probably not loaded, wait for it\n//     if(window.speechSynthesis.getVoices().length === 0) {\n//         window.speechSynthesis.addEventListener('voiceschanged', function() {\n//             textToSpeech();\n//         });\n//     }\n//     else {\n//         // languages list available, no need to wait\n//         textToSpeech()\n//     }\n// }\n\nexport default function textToSpeech(text, desiredVoice=1) {\n\t// get all voices that browser offers\n\tlet available_voices = window.speechSynthesis.getVoices();\n\n\t// this will hold an english voice\n\tlet english_voice1 = '';\n\tlet english_voice2 = '';\n\tlet ind = 0;\n\n\t// find voice by language locale \"en-US\"\n\t// if not then select the first voice\n\tfor(let i=0; i<available_voices.length; i++) {\n\t\tif(available_voices[i].lang === 'en-US') {\n\t\t\tenglish_voice1 = available_voices[i];\n\t\t\tind = i+1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor(let i=ind; i<available_voices.length; i++) {\n\t\tif(available_voices[i].name === 'Samantha') {\n\t\t\tenglish_voice2 = available_voices[i];\n\t\t\tind = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(english_voice1 === '')\n\t\tenglish_voice1 = available_voices[0];\n\n\tif(english_voice2 === '')\n\t\tenglish_voice2 = available_voices[0];\n\n\t// new SpeechSynthesisUtterance object\n\tlet utter = new SpeechSynthesisUtterance();\n\tutter.rate = 1.1;\n\tutter.pitch = 1;\n\tutter.text = text;\n\tif (desiredVoice === 1) {\n\t\tutter.voice = english_voice1;\n\t} else\n\t\tutter.voice = english_voice2\n\n\t// speak\n\twindow.speechSynthesis.speak(utter);\n}","import React, {useState, useEffect, useCallback} from \"react\";\nimport PauseIcon from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport textToSpeech from \"../speech.helper\"\nimport \"./timer.styles.scss\"\n\nexport default function Timer(props){\n    const { runTime, alternate, isResting, precount, setPrecount, nextExercise, currentExercise, reset } = props;\n    const [isRunning, setIsRunning] = useState(false);\n    const [seconds, setSeconds] = useState(0);\n    const timeRemaining = runTime - seconds;\n\n    const goPrecount = useCallback(() => {\n\n        if(precount === 1)\n            textToSpeech(`Go. ${currentExercise}`);\n        else if (precount > 0)\n            textToSpeech(precount - 1);\n\n        setPrecount(precount - 1);\n        \n    }, [currentExercise, precount, setPrecount])\n\n\n    const timeZero = useCallback(() => {\n\n        if(nextExercise === null){\n            setIsRunning(false)\n            setSeconds(seconds + 1) //timeremaining should be 0 after this. Triggers \"great job\"\n            textToSpeech(\"Great job\", \"Samantha\")\n        } else {\n            if(isResting) {\n                textToSpeech(`Go. ${nextExercise}`)\n            } else {\n                textToSpeech(`Rest. Next up, ${nextExercise}`, \"Samantha\")\n            }\n\n            alternate();\n            setSeconds(0);\n        }\n\n    }, [isResting, nextExercise, alternate, seconds])\n\n\n    const timer = useCallback(() => {\n\n        if(precount >= 0) {\n            goPrecount();\n            return\n        } \n\n        if(runTime === \"stop\") {\n            stop();\n            return\n        }\n\n        if(timeRemaining <= 1) {\n            timeZero();\n            return\n        }\n\n        if (timeRemaining <= 6) {    \n            if(!isResting)\n                textToSpeech(timeRemaining - 1, \"Samantha\");\n            else if (timeRemaining <= 4)\n                textToSpeech(timeRemaining - 1);\n        } \n\n        setSeconds(seconds + 1)\n        \n    }, [seconds, runTime, timeRemaining, precount, isResting, goPrecount, timeZero ])\n    \n    useEffect(\n        () => {\n            if(reset) {\n                resetWorkout();\n                return\n            }\n\n            if(isRunning){\n                const id = setInterval(timer, 1000);\n                return () => clearInterval(id);\n            }\n        }, [isRunning, timer, reset]\n    );\n\n    const start = () => {\n        setIsRunning(true);\n    }\n\n    const stop = () => {\n        setIsRunning(false)\n    }\n\n    const resetWorkout = () => {\n        setIsRunning(false)\n        setSeconds(0);\n    }\n\n    const timerButtons =    <div className=\"icon-button\">\n                                {!isRunning ? \n                                    <PlayCircleFilledIcon fontSize=\"large\" onClick={start}/> \n                                    :\n                                    <PauseIcon fontSize=\"large\" onClick={stop}/>\n                                }\n                            </div>\n                        \n    \n    const isWorkingOut = (timeRemaining === 0 && nextExercise !== null && isResting) || (isRunning && !isResting && precount <=0 && timeRemaining >= 1);\n\n    return (\n        <div \n            className=\"timer-gradient-wrapper\"\n            style={isWorkingOut ? {background: \"linear-gradient(200deg, var(--highlight-color), var(--deeper-color))\"} : null} \n        >\n            <div className=\"timer-container\">\n                    {precount >= 0 && isRunning ? \n                            precount === 0 ? <div className=\"timer-font\">GO{timerButtons}</div>\n                                    : precount <= 3 ? <div className=\"timer-font\">{precount}{timerButtons}</div>\n                                        : reset ? <div className=\"timer-font\">{timeRemaining}{timerButtons}</div>\n                                            : <div className=\"timer-fancy\">Let's go!</div> //prevents flicker upon reset\n                                            \n                    : isNaN(runTime) ? <div className=\"timer-font\">0 {timerButtons}</div>\n                        : timeRemaining !== 0 ? <div className=\"timer-font\">{timeRemaining}{timerButtons}</div>\n                            : nextExercise === null ? <div className=\"timer-fancy\">GREAT JOB!</div>\n                                : isResting ? <div className=\"timer-font\">GO{timerButtons}</div> \n                                    : <div className=\"timer-font\">0{timerButtons}</div>\n                    }    \n            </div>\n        </div>\n    )\n}\n\n","import React, {useState} from \"react\";\nimport Timer from \"../Timer/Timer\";\nimport \"./clock.styles.scss\";\n\nexport default function Watch(props){\n    const { exerciseList, workoutInterval, restInterval } = props;\n    const [isResting, setIsResting] = useState(false);\n    const [index, setIndex] = useState(0);\n    const [precount, setPrecount] = useState(4);\n    const [reset, setReset] = useState(false);\n\n    let currentExercise = \"\";\n    let nextExercise = \"\";\n    let time = isResting ? restInterval : workoutInterval;\n\n    const alternateBetweenResting = () => {\n        \n        if(!isResting){\n            setIsResting(true)\n            time = restInterval;\n        } else {\n            setIndex(index + 1);\n            setIsResting(false)\n            time = workoutInterval;\n        }\n    }\n\n    const resetWorkout = () => {\n        setIndex(0);\n        setPrecount(4);\n        setIsResting(false);\n        setReset(true);\n        setTimeout(() => setReset(false), 250)\n    }\n\n    if(index < exerciseList.length){\n        currentExercise = exerciseList[index].name;\n\n        if(exerciseList.length === 1 || index + 1 === exerciseList.length){\n            nextExercise = null\n        } else {\n            nextExercise = exerciseList[index + 1].name\n        }\n    } else {\n        time = \"stop\"\n    }\n\n\n    let exerciseIndexMsg = `${index + 1}/${exerciseList.length}`\n    let currentExerciseMsg = <div className=\"clock-exercise\">\n                                {isResting ? \"Rest\" : currentExercise}\n                            </div>\n\n    if(index >= exerciseList.length){\n        exerciseIndexMsg = `${index}/${exerciseList.length}`;\n        currentExerciseMsg = \"\"\n    }\n    \n    return (\n        <div>\n            {/* <button className=\"clock-button\" onClick={resetWorkout}>Restart Workout</button> */}\n\n            <div className=\"clock-container\">\n                <div>{exerciseIndexMsg}</div>\n                <div className=\"clock-current-exercise\">\n                    {currentExerciseMsg}\n                </div>\n                <Timer \n                    runTime={time} \n                    alternate={alternateBetweenResting} \n                    precount={precount} \n                    setPrecount={setPrecount} \n                    isResting={isResting}\n                    currentExercise={currentExercise}\n                    nextExercise={nextExercise}\n                    reset={reset}\n                />\n                <div className=\"clock-up-next\">\n                    {nextExercise === null ? \" \" : \n                        <div>\n                            Next Up\n                            <div className=\"clock-next-exercise\">{nextExercise}</div>\n                        </div>\n                    }\n                </div>\n            </div>\n            <div className=\"clock-start-over-container\">\n                <button className=\"clock-button\" onClick={resetWorkout}>Restart Workout</button>\n            </div>\n        </div> \n    )\n}","import uuid from 'uuid/v4'\n\nexport default [ \n    {id: uuid(), name: 'Jumping Jacks'}, \n    {id: uuid(), name: 'Wall Sit'}, \n    {id: uuid(), name: 'Push-ups'}, \n    {id: uuid(), name: 'Sit-ups'}, \n    {id: uuid(), name: 'Step Up Onto Chair'}, \n    {id: uuid(), name: 'Squats'}, \n    {id: uuid(), name: 'Tricep-dips'}, \n    {id: uuid(), name: 'Plank'}, \n    {id: uuid(), name: 'High-Knees Running'}, \n    {id: uuid(), name: 'Lunges'}, \n    {id: uuid(), name: 'Push-up w/rotation'}, \n    {id: uuid(), name: 'Side Plank 1'}, \n    {id: uuid(), name: 'Side Plank 2'}\n  ]","import React from 'react';\nimport './App.css';\nimport Sidebar from \"./components/sidebar/Sidebar\"\nimport AddNewPopup from \"./components/addNew-popup/addNewPopup\"\nimport SettingsPopup from \"./components/settingsPopup/settingsPopup\"\nimport Clock from './components/Clock/Clock.component.jsx';\n\nimport exerciseList from \"./exerciseList\"\nimport uuid from \"uuid/v4\"\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      exerciseList: exerciseList,\n      workoutInterval: 30,\n      restInterval: 10,\n      isIntervalDialogOpen: false,\n      isAddNewDialogOpen: false,\n    }\n  }\n\n  onListChange = (newList) => {\n    this.setState({exerciseList: newList});\n  }\n\n  openAddNew = () => {\n    this.setState({ isAddNewDialogOpen: true});\n  }\n\n  openSettingsWindow = () => {\n    this.setState({ isIntervalDialogOpen: true})\n  }\n\n  closeAddNewPopup = () => {\n    this.setState({ isAddNewDialogOpen: false})\n  }\n\n  closeSettingsWindow = () => {\n    this.setState({ isIntervalDialogOpen: false})\n  }\n\n  addNewExercise = (newExercise) => {\n    const updatedList = [...this.state.exerciseList, {id: uuid(), name: newExercise}]\n    this.setState({exerciseList: updatedList})\n  }\n\n  removeExercise = (exerciseToRemove) => {\n    const updatedList = this.state.exerciseList.filter(exercise => exercise.id !== exerciseToRemove.id)\n    this.setState({exerciseList: updatedList})\n  }\n\n  editExercise = (updatedExercise) => {\n    console.log(\"editing:\", updatedExercise)\n    const existingList = this.state.exerciseList;\n    const updatedList = existingList.map(exercise => {\n      if(exercise.id === updatedExercise.id){\n        return updatedExercise;\n      } else {\n        return exercise;\n      }\n    })\n    this.setState({exerciseList: updatedList})\n  }\n\n  updateIntervals = (newTimes) => {\n    const {workoutInterval, restInterval} = newTimes;\n    this.setState({workoutInterval: workoutInterval, restInterval: restInterval})\n  }\n\n  reset = () => {\n    this.setState({exerciseList: exerciseList})\n  }\n\n  render(){\n    const { exerciseList, isAddNewDialogOpen, isIntervalDialogOpen, workoutInterval, restInterval} = this.state;\n    const { onListChange, openAddNew, closeAddNewPopup, addNewExercise, openSettingsWindow, closeSettingsWindow, \n            updateIntervals, removeExercise, reset, editExercise} = this;\n    return (\n      <div className=\"App\">\n          <Sidebar \n            exerciseList={exerciseList} \n            onListChange={onListChange} \n            addNew={openAddNew} \n            openSettingsWindow={openSettingsWindow}\n            removeExercise={removeExercise}\n            reset={reset}\n            editExercise={editExercise}\n          />\n          {isAddNewDialogOpen && <AddNewPopup closePopup={closeAddNewPopup} addNewExercise={addNewExercise} />}\n          {isIntervalDialogOpen && \n            <SettingsPopup closePopup={closeSettingsWindow} intervals={{w: workoutInterval, r: restInterval}} updateIntervals={updateIntervals} />\n          }\n          <Clock exerciseList={exerciseList} workoutInterval={workoutInterval} restInterval={restInterval} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}